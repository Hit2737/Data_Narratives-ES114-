# -*- coding: utf-8 -*-
"""22110098_ES114_DN2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sQCcV4OJ0N791S5lC_m6ceDo8wnAGEPP

# ***1st Dataset:*** *usnews.data*
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

usnews  = pd.read_csv('/content/usnews2.csv')
usnews = pd.DataFrame(usnews)
usnews = usnews.replace('*','0')

usnews

"""### ***Q1)*** *Is it possible that the result of private colleges are better then public colleges in each and every examination?*

On observing the below code and output we can see that the average marks in each subject of private colleges are more than that of public colleges.
"""

usnums = usnews[['public=1;private=2','Avg.MathSAT','Avg.VerbalSAT','Avg.ACT','1Q_MathSAT','3Q_MathSAT','1Q_VerbalSAT','3Q_VerbalSAT','1Q_ACT','3Q_ACT']]
for i in usnums:
  usnums[i] = pd.to_numeric(usnews[i])
print(usnums)
comparator = (usnums.groupby(usnums['public=1;private=2'])).mean()
comparator

"""### **Q2)** *What is the probability that your application will get accepted with 100% surety if you submit it to a particular US College? (based on previous data)*

"""

us2 = usnews[['Clg Name','#AppRecvd','#AppAcpt']]
for i in us2:
  try: us2[i] = us2[i].astype(float)
  except: pass

us2['#AppRecvd'] = us2['#AppRecvd'][us2['#AppRecvd']!=0]
us2["Acpt/Recvd_ratio"] = us2['#AppAcpt']/us2['#AppRecvd']

plt.figure(figsize = (8,5))
plt.scatter(np.arange(1302),us2['Acpt/Recvd_ratio'],marker='*',color='y')
plt.xlabel('Indices Assigned to Colleges (0 to 1301)'); plt.ylabel('Applicants_accepted/Applications_received Ratio')
plt.show()
print('No. of Colleges having minimum Applicants_accepted/Applications_received Ratio are:', 
      (us2['Clg Name'][us2['Acpt/Recvd_ratio']==us2['Acpt/Recvd_ratio'].min()]).count(),
      '\nNo. of Colleges having maximum Applicants_accepted/Applications_received Ratio are:',
      (us2['Clg Name'][us2['Acpt/Recvd_ratio']==us2['Acpt/Recvd_ratio'].max()]).count())
print('Therefore the required probability is:',(us2['Clg Name'][us2['Acpt/Recvd_ratio']==us2['Acpt/Recvd_ratio'].max()]).count()/1302)

"""### ***Q3)*** *Is there any connection between the graduation rate and student/faculty ratio?*

As per the graph we get using the code written below, we get that the student/faculty ratio have a significance dependence on the graduation rate as we expected. The graduation rate increases significantly on decreasing the ratio this shows when there are less number of students in a class attending a lecture will grab information better than in a big crowdy class.
"""

import itertools
sfg = usnews[['Std./Fac.ratio','GraduationRate']]
for i in sfg: sfg[i] = pd.to_numeric(sfg[i])
sfg['GraduationRate'] = sfg['GraduationRate'][sfg['GraduationRate']!=0]
print(sfg)

colors = itertools.cycle(["r", "b", "g", "y"])
i = 0
plt.figure(figsize = (10,7))
for y in sfg['GraduationRate']:
    plt.scatter(sfg['Std./Fac.ratio'][i],y, color=next(colors)) 
    i += 1
plt.title('Reln b/w Student/Faculty ratio and Graduation Rate of a particular College')
plt.ylabel('Graduation Rate'); plt.xlabel('Student/Faculty Ratio')
plt.show()

"""### ***Q4)*** *Does the estimated book cost depends on the State in which they are studying or is it same in every state of US?*

The blue line representing the mean book cost varies from approx $350 to 700 which is a huge variation for us. On observing the mean line we found that it is about â‚¹28000 of difference for an Indian person who is studying in US College.
"""

cost = usnews[['Postal Code','Est.bookcost']]
cost['Est.bookcost'] = pd.to_numeric(cost['Est.bookcost'])
compare_cost = (cost.groupby('Postal Code')).mean()

plt.figure(figsize = (19,7))
sns.stripplot(x ='Postal Code', y ='Est.bookcost', data = cost, hue ='Postal Code')
plt.legend(bbox_to_anchor=(1.02, 1), loc='upper left', borderaxespad=0)
plt.plot(compare_cost)
plt.show()

"""### ***Q5)*** *Which are the most popular US College among students whose applications are accepted?*

We can clearly observe that the ratio of new students enrolled to number of applicants accepted is greatest for *'Texas A&M University at College Station'* and for *'University of Texas at Austin'*.
"""

pplrty = usnews[['Clg Name','#AppAcpt','#NewStdEnr']]
for i in pplrty: 
  try: pplrty[i] = pd.to_numeric(pplrty[i])
  except: pass
pplrty = pplrty.nlargest(10,'#NewStdEnr')
pplrty = pplrty[pplrty['Clg Name'] != 'Kent State University']  #We removed it because there was an error in the data the applicants accepted were less than the new students enrolled, which can't be possible.
pplrty['ratio'] = pplrty['#NewStdEnr']/pplrty['#AppAcpt']
plt.figure(figsize = (7,5))
plt.barh(pplrty['Clg Name'],pplrty['ratio'],color = ['r','y','g'])
plt.xlabel('Ratio of No. of new students enrolled and No. of applicants accepted.')
plt.ylabel('Name of US Colleges')
plt.show()

"""# ***2nd Dataset:*** *aaup.data*"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

aaup = pd.read_csv('aaup.csv')
aaup = pd.DataFrame(aaup)
aaup = aaup.replace('*',0)
for i in aaup:
  try:
    aaup[i] = pd.to_numeric(aaup[i])
  except:
    pass

print(aaup)

"""### **Q6)** *The salary of professors in IIA and IIB type of Colleges should be same? (Hypothesis)*"""

sal = aaup[['Type', 'Avgsal. Allranks']]

salg = sal[ (sal['Type']=='IIA') | (sal['Type']=='IIB')]
salg = salg.groupby(salg['Type']).mean()
print(salg)
plt.figure(figsize=(4,4))
plt.pie(salg['Avgsal. Allranks'],labels = ['IIA','IIB'])
print('The difference in salaries of IIA and IIB professors is',
      (salg['Avgsal. Allranks']['IIA']-salg['Avgsal. Allranks']['IIB'])*100,
      'dollars,\nwhich is a small number on annual basis equal to',(salg['Avgsal. Allranks']['IIA']-salg['Avgsal. Allranks']['IIB'])*100*80,
      'rupees in Indian currency.')
print('So, our hypothesis is correct and their salaries have a small difference.')
plt.show()

"""### ***Q7)*** *Calculate the mean of variances in compensation salaries of the different professors of all the US Colleges and also plot them using bar graph.* """

csal = aaup[['Avgcomp. Fullprof','Avgcomp. Assoprof','Avgcomp. Assiprof']]
varsal = csal.var()
print('variance of following:\n',varsal)
plt.bar(varsal.index,varsal, color = ['grey'])
plt.ylabel('Variance')
print('Average of variances =',varsal.mean())
plt.show()

"""### ***Q8)*** *If a particular College has maximum number of faculty then what is the probability that the College is of type I?*

"""

faculty = aaup[['Type','#faculty-allrank']]
No_of_Itype = faculty[faculty['Type']=='I']
display(No_of_Itype)
maxnum = faculty[faculty['#faculty-allrank']==faculty['#faculty-allrank'].max()]
display(maxnum)
prob = (maxnum['#faculty-allrank'].count()/faculty['#faculty-allrank'].count())*(No_of_Itype['Type'].count()/faculty['#faculty-allrank'].count())
print(f'The required probability is {prob}')

"""### ***Q9)*** *Do the fulltime professors prefer to join the College in a particular state?*"""

sample = aaup[['Postal Code','#fullprof']]
plt.figure(figsize= (19,7))
sns.stripplot(x = sample['Postal Code'],y = sample['#fullprof'], hue = sample['Postal Code'])
plt.legend(bbox_to_anchor=(1.02, 1), loc='upper left', borderaxespad=0)
plt.title('Relation between number of fulltime profs and their state')
total = sample['#fullprof'].groupby(sample['Postal Code']).sum()
maxprof = total.max()
maxprofstate = total[total[total.index] == maxprof].index
print(maxprofstate)

"""### ***Q10)*** *If you want to join as assistant or associate professor in New York, what will you prefer?*

Before joining any College I will see the average and compensation salary. If I am going to change the Collages time by time then I will prefer the Colleges with higher average salary, else for long term I will go for high compensation salary.

As per the outcome I will join Dowling College for every case except if I want to join as assistant professor for short term.
"""

data = aaup[['Clg Name','Postal Code','Avgsal. Assiprof','Avgsal. Assoprof','Avgcomp. Assiprof','Avgcomp. Assoprof']]
g = data[data['Postal Code']=='NY'].groupby('Clg Name', as_index=False)['Avgsal. Assiprof'].mean().sort_values(by='Avgsal. Assiprof', ascending=False).head(15)
plt.figure(figsize = (19,10))
plt.subplot(221)
sns.barplot(data=g, x='Clg Name', y='Avgsal. Assiprof', hue='Clg Name', dodge=False).set(xticklabels=[])
plt.legend(bbox_to_anchor=(1.02, 1), loc='upper left', borderaxespad=0)
plt.subplot(222)
g = data[data['Postal Code']=='NY'].groupby('Clg Name', as_index=False)['Avgsal. Assoprof'].mean().sort_values(by='Avgsal. Assoprof', ascending=False).head(15)
sns.barplot(data=g, x='Clg Name', y='Avgsal. Assoprof', hue='Clg Name', dodge=False).set(xticklabels=[])
plt.legend(bbox_to_anchor=(1.02, 1), loc='upper left', borderaxespad=0)
plt.subplot(223)
g = data[data['Postal Code']=='NY'].groupby('Clg Name', as_index=False)['Avgcomp. Assiprof'].mean().sort_values(by='Avgcomp. Assiprof', ascending=False).head(15)
sns.barplot(data=g, x='Clg Name', y='Avgcomp. Assiprof', hue='Clg Name', dodge=False).set(xticklabels=[])
plt.legend(bbox_to_anchor=(1.02, 1), loc='upper left', borderaxespad=0)
plt.subplot(224)
g = data[data['Postal Code']=='NY'].groupby('Clg Name', as_index=False)['Avgcomp. Assoprof'].mean().sort_values(by='Avgcomp. Assoprof', ascending=False).head(15)
sns.barplot(data=g, x='Clg Name', y='Avgcomp. Assoprof', hue='Clg Name', dodge=False).set(xticklabels=[])
plt.legend(bbox_to_anchor=(1.02, 1), loc='upper left', borderaxespad=0)
plt.subplots_adjust(wspace=0.6, hspace=0.3)
plt.show()